#pragma once
#include "../protocol/internal.h"

namespace
{
	const char* GetTableName(int table)
	{
		switch (table)
		{
		case ktBaseInfo:
			return "base_info";
			break;
		case ktFunctionBuilding:
			return "function_building";
			break;
		case ktBusinessBuilding:
			return "business_building";
			break;
		case ktDecoration:
			return "decoration";
			break;
		case ktRoad:
			return "road";
			break;
		case ktHero:
			return "hero";
			break;
		case ktProp:
			return "prop";
			break;
		case ktEquipment:
			return "equipment";
		case ktPropSetting:
			return "prop_setting";
		case ktEquipmentGem:
			return "equipment_gem";
		case ktFormula:
			return "formula";
		case ktSkill:
			return "skill";
		case ktStatus:
			return "status";
		case ktArenaInfo:
			return "arena_info";
		case ktArenaHistory:
			return "arena_history";
		case ktRuneStatus:
			return "rune_status";
		case ktRuneInfo:
			return "rune_info";
		case ktGuild:
			return "guild";
		case ktGrade:
			return "grade";
		case ktArray:
			return "array";
		case ktGuildAuthority:
			return "guild_authority";
		case ktEscortInfo:
			return "escort_info";
		case ktEscortRoad:
			return "escort_road";
		case ktFish:
			return "fish";
		case ktFishRecord:
			return "fish_record";
		case ktSection:
			return "section";
		case ktEscortReward:
			return "escort_reward";
		case ktEscortRobbed:
			return "escort_robbed";
		case ktAction:
			return "action";
		case ktAchievement:
			return "achievement";
		case ktGuildIcon:
			return "guild_icon";
		case ktArenaChallenge:
			return "arena_challenge";
		case ktPlayGroundRaceGuess:
			return "playground_race_guess";
		case ktGuildMemberInfo:
			return "guild_member_info";
		case ktGuilWarFields:
			return "guild_war_fields";
		case ktWorldWarInfo:
			return "world_war_info";
		case ktLordBuffer:
			return "lord_buffer";
		case ktGuildWarMemberInfo:
			return "guild_war_member_info";
		case ktSettings:
			return "settings";
		case ktVIPCount:
			return "vip_count";
		case ktBattleRecord:
			return "battle_record";
		case ktTrain:
			return "train";
		case ktGuildGiving:
			return "guild_giving";
		case ktGuildMapSignList:
			return "guild_map_sign_list";
		case ktAuctionInfo:
			return "auction_info";
		case ktAuction:
			return "auction";
		case ktGuildApplication:
			return "guild_applicaiton";
		case ktGuildWarFields:
			return "guild_war_fields";
		case ktBranchTask:
			return "branch_task";
		case ktAuctionOffline:
			return "auction_offline";
		case ktBossSection:
			return "boss_section";
		case ktGuildWarBuff:
			return "guild_war_buff";
		case ktPlaygroundRearroom:
			return "playground_rear";
		case ktPlaygroundDragon:
			return "playground_dragon";
		case ktAssistant:
			return "assistant";
		case ktPlaygroundSignup:
			return "playground_race_signup";
		case ktPlayground:
			return "playground";
		case ktMiscInfo:
			return "misc_info";
		case ktTreeSeed:
			return "tree_seed";
		case ktTreeLog:
			return "tree_log";
		case ktTreeWater:
			return "tree_water";
		case ktTurntable:
			return "turntable";
		case ktRewardForDaysAgo:
			return "reward_for_days_ago";
		case ktSaveWebsite:
			return "save_website";
		case ktLuckyDraw:
			return "lucky_draw";
		case ktCheckInEveryDay:
			return "check_in_every_day";
		case ktCheckInAccumulate:
			return "check_in_accumulate";
		case ktTower:
			return "tower";
		case ktTownWarehouse:
			return "town_warehouse";
		case ktTerritoryOffline:
			return "territory_offline";
		case ktTerritoryInfo:
			return "territory_info";
		case ktConsumeRecord:
			return "consume_record";
		case ktStageAward:
			return "stage_award";
		default:
			break;
		}
		printf("Database table %d not defined!", table);
		throw "Database table not defined!";
		return "";
	}

	const char* GetFieldName(int field)
	{
		switch (field)
		{
		case kfGold:
			return "gold";
			break;
		case kfSilver:
			return "silver";
			break;
		case kfExp:
			return "exp";
			break;
		case kfEnergy:
			return "energy";
			break;
		case kfFeat:
			return "feat";
			break;
		case kfPrestige:
			return "prestige";
			break;
		case kfMobility:
			return "mobility";
			break;
		case kfLevel:
			return "level";
			break;
		case kfPlayer:
			return "player";
		case kfPlayerId:
			return "player_id";
			break;
		case kfID:
			return "id";
			break;
		case kfX:
			return "x";
			break;
		case kfY:
			return "y";
			break;
		case kfAspect:
			return "aspect";
			break;
		case kfKind:
			return "kind";
			break;
		case kfWarehoused:
			return "warehoused";
			break;
		case kfLastReap:
			return "last_reap";
			break;
		case kfProgress:
			return "progress";
			break;
		case kfStrength:
			return "strength";
		case kfAgility:
			return "agility";
		case kfIntelligence:
			return "intelligence";
		case kfPassedSection:
			return "passed_section";
		case kfHoles:
			return "holes";
		case kfLocation:
			return "location";
		case kfLogoutTime:
			return "logout_time";
		case kfHero:
			return "hero";
		case kfArea:
			return "area";
		case kfBagGridsCount:
			return "bag_grids_count";
		case kfWarehouseGridsCount:
			return "warehouse_grids_count";
		case kfAmount:
			return "amount";
		case kfStatus:
			return "status";
		case kfGems:
			return "gems";
		case kfCountry:
			return "country";
		case kfScore:
			return "score";
		case kfArray:
			return "array";
		case kfArmyArea:
			return "army_area";
		case kfArmyLocation:
			return "army_location";
		case kfEncounterCD:
			return "encounter_cd";
		case kfTrunkTask:
			return "trunk_task";
		case kfBranchTask:
			return "branch_task";
		case kfTrunkTaskProgress:
			return "trunk_task_progress";
		case kfBranchTaskProgress:
			return "branch_task_progress";
		case kfLastLogoutTime:
			return "last_logout_time";
		case kfType:
			return "type";
		case kfRank:
			return "rank";
		case kfReward:
			return "reward";
		case kfRewardBak:
			return "reward_bak";
		case kfTime:
			return "time";
		case kfCount:
			return "count";
		case kfBuyCount:
			return "buy_count";
		case kfWinCount:
			return "win_count";
		case kfLoseCount:
			return "lose_count";
		case kfTarget:
			return "target";
		case kfWinner:
			return "winner";
		case kfRankSelf:
			return "rank_self";
		case kfRankTarget:
			return "rank_target";
		case kfWarID:
			return "war_id";
		case kfTemperature:
			return "temperature";
		case kfFreeze:
			return "freeze";
		case kfRuneID:
			return "rune_id";
		case kfLocked:
			return "locked";
		case kfPosition:
			return "position";
		case kfGuildId:
			return "guild_id";
		case kfName:
			return "name";
		case kfLeader:
			return "leader";
		case kfIcon:
			return "icon";
		case kfCallBoard:
			return "call_board";
		case kfGuildGradeLevel:
			return "guild_grade_level";
		case kfGradeName:
			return "grade_name";
		case kfGradeAuthority:
			return "grade_authority";
		case kfTotal:
			return "total";
		case kfIntercept:
			return "intercept";
		case kfInterceptTotal:
			return "intercept_total";
		case kfAutoAccept:
			return "auto_accept";
		case kfGuardian:
			return "guardian";
		case kfTransport:
			return "transport";
		case kfFishFishTimes:
			return "fish_times";
		case kfFishGoldTimes:
			return "gold_times";
		case kfFishTorpedoTimes:
			return "torpedo_times";
		case kfFishKind:
			return "kind";
		case kfFishWeight:
			return "weight";
		case kfLooter1:
			return "looter1";
		case kfLooter2:
			return "looter2";
		case kfLastActiveTime:
			return "last_active_time";
		case kfHelp:
			return "help";
		case kfRefresh:
			return "refresh";
		case kfBeintercepted:
			return "beintercepted";
		case kfRobber:
			return "robber";
		case kfValue:
			return "value";
		case kfDefendCount:
			return "defend_count";
		case kfDefendTotal:
			return "defend_total";
		case kfChallenger:
			return "challenger";
		case kfRankChange:
			return "rank_change";
		case kfPlayGroundRaceGuessMoney:
			return "money";
		case kfIconFrame:
			return "icon_frame";
		case kfIconBinLen:
			return "icon_bin_len";
		case kfIconBin:
			return "icon_bin";
		case kfPlayGroundRaceGuessGuess:
			return "guess";
		case kfPlayGroundDragon:
			return "dragon";
		case kfHeavensent:
			return "heavensent";
		case kfGuildOffer:
			return "guild_offer";
		case kfActivityExp:
			return "activity_exp";
		case kfRechargedGold:
			return "recharged_gold";
		case kfBringupBin:
			return "bringup_bin";
		case kfWarFieldId:
			return "war_field_id";
		case kfTechnologyLevel:
			return "technology_level";
		case kfTechnologyExp:
			return "technology_exp";
		case kfWarFieldOffer:
			return "war_field_offer";
		case kfPoint:
			return "point";
		case kfRobot:
			return "robot";
		case kfVote:
			return "vote";
		case kfEquiped:
			return "equiped";
		case kfIsGetMemberBox:
			return "is_get_member_box";
		case kfSetting:
			return "setting";
		case kfMax:
			return "max";
		case kfAlchemy:
			return "alchemy";
		case kfRune:
			return "rune";
		case kfRecord:
			return "record";
		case kfTrainNum:
			return "train_num";
		case kfBuyNum:
			return "buy_num";
		case kfAddCountTime:
			return "add_count_time";
		case kfGuildWarId:
			return "guild_war_id";
		case kfGuildCount:
			return "guild_count";
		case kfBoxType:
			return "box_type";
		case kfPlayerFightBox:
			return "player_fight_box";
		case kfPlayerGuildBox:
			return "player_guild_box";
		case kfPlayerBox:
			return "player_box";
		case kfPrice:
			return "price";
		case kfUUID:
			return "uuid";
		case kfSeller:
			return "seller";
		case kfBuyer:
			return "buyer";
		case kfStart:
			return "start";
		case kfPlayerName:
			return "player_name";
		case kfPlayerLevl:
			return "player_level";
		case kfBossKillingTimes:
			return "boss_killing_times";
		case kfTimes:
			return "times";
		case kfBind:
			return "bind";
		case kfBattleType:
			return "battle_type";
		case kfBuyLastTrainTime:
			return "buy_last_train_time";
		case kfRearrooms:
			return "rooms";
		case kfAssActivity:
			return "activity";
		case kfAssDraw:
			return "draw";
		case kfPlaygroundHisRank:
			return "his_rank";
		case kfPlaygroundRank:
			return "rank";
		case kfPlaygroundDState:
			return "d_state";
		case kfPlaygroundRaceway:
			return "raceway";
		case kfPlaygroundSignup:
			return "signup";
		case kfPlaygroundStrength:
			return "strength";
		case kfPlaygroundAgility:
			return "agility";
		case kfPlaygroundIntellect:
			return "intellect";
		case kfPlaygroundMTime:
			return "m_time";
		case kfPlaygroundTickets:
			return "tickets";
		case kfReplenishTime:
			return "replenish_time";
		case kfBackTime:
			return "back_time";
		case kfStamina:
			return "stamina";
		case kfStaminaTake:
			return "stamina_take";
		case kfFightPower:
			return "fight_power";
		case kfWorshipLevel:
			return "worship_level";
		case kfWorshipSilver:
			return "worship_silver";
		case kfWorshipFightingPower:
			return "worship_fightingpower";
		case kfWorshipDegreeOfProsperity:
			return "worship_degree_of_prosperity";
		case kfWorshipGuild:
			return "worship_guild";
		case kfWorshipUseNum: 
			return "worship_use_num";
		case kfTreeKind:
			return "kind";
		case kfTreeLocation:
			return "location";
		case kfTreeWatered:
			return "watered";
		case kfTreeStatus:
			return "status";
		case kfTreeRipeTime:
			return "ripe_time";
		case kfTreeLastWater:
			return "last_water";
		case kfTreeId:
			return "id";
		case kfTreeUid:
			return "uid";
		case kfTreeTime:
			return "time";
		case kfTreeWaterAmount:
			return "water_amount";
		case kfTreeBuyCount:
			return "buy_count";
		case kfTurnTimes:
			return "times";
		case kfTurnReTimes:
			return "re_times";
		case kfTurnCurPoint:
			return "cur_point";
		case kfTurnResult:
			return "result";
		case kfTurnShouldReturn:
			return "should_return";
		case kfTower:
			return "tower";
		case kfLayer:
			return "layer";
		case kfSuspend:
			return "suspend";
		case  kfExpireTime:
			return "expire_time";
		case kfDegreeOfProsperity:
			return "degree_of_prosperity";
		case kfPassedBossSection:
			return "passed_boss_section";
		case kfGot:
			return "got";
		case kfStage:
			return "stage";
		case kfPhase:
			return "phase";
		case kfRewards:
			return "rewards";
		case kfDays:
			return "days";

		default:
			break;
		}
		printf("Database table field %d not defined!", field);
		throw ("Field not defined!");
		return "";
	}
}
